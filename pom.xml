<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.doogwood</groupId>
	<artifactId>doogwood-cmdexec</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>CmdExec</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.doogwood.base.javaVersion>1.6</org.doogwood.base.javaVersion>
		<!-- <org.doogwood.base.mainClass>org.doogwood.base.Hello</org.doogwood.base.mainClass> -->
		
		<!--　
		[[ GitHub Maven Pluginsのための設定 ]]
		このプロジェクトのMavenリポジトリの構築先であるGithubサーバを指定する.
		settings.xmlでサーバ情報（<server><id>github</id>...</server>）が定義されていることが前提.
		-->
		<github.global.server>github</github.global.server>
	</properties>

	<!--
	[[ GitHub Maven Pluginsのための設定 ]]
	ユーザ・コード側のプロジェクトに付与すべき設定.
	Github上のMavenリポジトリにアクセスして依存性をダウンロードするよう指定する.

	<repositories>
	    <repository>
	        <id>doogwood-mvnrepo</id>
	        <url>https://raw.github.com/mizukyf/doogwood-mvnrepo/master/</url>
	        <snapshots>
	            <enabled>true</enabled>
	            <updatePolicy>always</updatePolicy>
	        </snapshots>
	    </repository>
	</repositories>
	-->
	
	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--
	[[ GitHub Maven Pluginsのための設定 ]]
	アーティファクトをGithub上のMavenリポジトリにアップロードするまえの一時的な格納先の指定.
	-->
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<!-- [[Maven Compiler Pluginのための設定]]
			Java言語バージョンを指定する. <source>と<target>はjavacコマンドの同名オプションに対応する.
			<source>によりソースコードがどのJava言語バージョンで記載されたものと見なすかを指定する.
			<target>によりソースコードがどのJava言語バージョンのクラス・ファイルを生成するか指定する.
			-->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${org.doogwood.base.javaVersion}</source>
					<target>${org.doogwood.base.javaVersion}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--
			[[ Maven Deploy Pluginのための設定 ]]
			Github上のMavenリポジトリにアップロードするまえの一時的な格納先にアーティファクトをデプロイするよう指定.
			-->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<!--
			[[ GitHub Maven Pluginsのための設定 ]]
			messageタグでGitコミットを行うときのコミット・メッセージを指定する.
			noJekyllタグでJekyllによるサイト生成処理を行わないように指定する.
			mergeタグで直近のバージョンと異なるアーティファクトであってもMavenリポジトリ上に残しておくよう指定する.
			outputDirectoryタグでリポジトリにアップロードすべきファイルが格納されているディレクトリを指定する.
			branchタグでMavenリポジトリとして利用するブランチ名を指定する（存在しなければ自動生成される）.
			repositoryNameタグでリポジトリ名を指定する.
			repositoryOwnerタグでリポジトリの所有者を指定する.
			-->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>
					<noJekyll>true</noJekyll>
					<merge>true</merge>
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<branch>refs/heads/master</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>doogwood-mvnrepo</repositoryName>
					<repositoryOwner>mizukyf</repositoryOwner>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>